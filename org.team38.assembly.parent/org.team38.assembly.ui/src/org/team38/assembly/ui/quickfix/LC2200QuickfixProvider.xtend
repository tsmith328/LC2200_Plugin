/*
 * generated by Xtext 2.9.1
 */
package org.team38.assembly.ui.quickfix

import org.eclipse.xtext.ui.editor.quickfix.DefaultQuickfixProvider
import org.team38.assembly.validation.LC2200Validator
import org.eclipse.xtext.validation.Issue
import org.eclipse.xtext.ui.editor.quickfix.IssueResolutionAcceptor
import org.eclipse.xtext.ui.editor.quickfix.Fix

/**
 * Custom quickfixes.
 *
 * See https://www.eclipse.org/Xtext/documentation/304_ide_concepts.html#quick-fixes
 */
class LC2200QuickfixProvider extends DefaultQuickfixProvider {

	@Fix(LC2200Validator.DECIMAL_IMMEDIATE_VALUE)
	def removeFractionalPart(Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(issue, "Remove Fractional Part", "Remove the digits after the decimal point.", "") [
			context |
			val xtextDocument = context.xtextDocument
			val number = xtextDocument.get(issue.offset, issue.length)
			val decimalPoint = number.indexOf(".");
			xtextDocument.replace(issue.offset + decimalPoint, issue.length - decimalPoint, "")
		]
	}
	
	@Fix(LC2200Validator.EXTREME_IMMEDIATE_VALUE)
	def setWithinBounds(Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(issue, "Set to" + issue.data.head, "Set immediate value to nearest value within bounds.", "") [
			context |
			val xtextDocument = context.xtextDocument
			xtextDocument.replace(issue.offset, issue.length, issue.data.head)
		]
	}
	
	@Fix(LC2200Validator.DUPLICATE_LABEL)
	def renameLabel(Issue issue, IssueResolutionAcceptor acceptor) {
		acceptor.accept(issue, "Rename Label", "Enter a new name for the label.", "") [
			context |
			val xtextDocument = context.xtextDocument
			xtextDocument.replace(issue.offset, issue.length, "")
		]
	}
	
	@Fix(LC2200Validator.INVALID_LABEL)
	def replaceLabel(Issue issue, IssueResolutionAcceptor acceptor) {
		for(String str : issue.data)
		{
			acceptor.accept(issue, "Replace Label with " + str, "Replace with " + str + ".", "") [
				context |
				val xtextDocument = context.xtextDocument
				xtextDocument.replace(issue.offset, issue.length, str)
			]
		}
	}
}
