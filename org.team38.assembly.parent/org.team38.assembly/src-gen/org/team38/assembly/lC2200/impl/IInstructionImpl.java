/**
 * generated by Xtext 2.9.2
 */
package org.team38.assembly.lC2200.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.team38.assembly.lC2200.IInstruction;
import org.team38.assembly.lC2200.LC2200Package;
import org.team38.assembly.lC2200.LabelEnd;
import org.team38.assembly.lC2200.RegTrans;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>IInstruction</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.team38.assembly.lC2200.impl.IInstructionImpl#getI_opcode <em>Iopcode</em>}</li>
 *   <li>{@link org.team38.assembly.lC2200.impl.IInstructionImpl#getReg1 <em>Reg1</em>}</li>
 *   <li>{@link org.team38.assembly.lC2200.impl.IInstructionImpl#getReg2 <em>Reg2</em>}</li>
 *   <li>{@link org.team38.assembly.lC2200.impl.IInstructionImpl#getImm <em>Imm</em>}</li>
 *   <li>{@link org.team38.assembly.lC2200.impl.IInstructionImpl#getLabel <em>Label</em>}</li>
 * </ul>
 *
 * @generated
 */
public class IInstructionImpl extends MinimalEObjectImpl.Container implements IInstruction
{
  /**
   * The cached value of the '{@link #getI_opcode() <em>Iopcode</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getI_opcode()
   * @generated
   * @ordered
   */
  protected EObject i_opcode;

  /**
   * The cached value of the '{@link #getReg1() <em>Reg1</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReg1()
   * @generated
   * @ordered
   */
  protected RegTrans reg1;

  /**
   * The cached value of the '{@link #getReg2() <em>Reg2</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReg2()
   * @generated
   * @ordered
   */
  protected RegTrans reg2;

  /**
   * The default value of the '{@link #getImm() <em>Imm</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getImm()
   * @generated
   * @ordered
   */
  protected static final String IMM_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getImm() <em>Imm</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getImm()
   * @generated
   * @ordered
   */
  protected String imm = IMM_EDEFAULT;

  /**
   * The cached value of the '{@link #getLabel() <em>Label</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLabel()
   * @generated
   * @ordered
   */
  protected LabelEnd label;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected IInstructionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return LC2200Package.Literals.IINSTRUCTION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EObject getI_opcode()
  {
    return i_opcode;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetI_opcode(EObject newI_opcode, NotificationChain msgs)
  {
    EObject oldI_opcode = i_opcode;
    i_opcode = newI_opcode;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, LC2200Package.IINSTRUCTION__IOPCODE, oldI_opcode, newI_opcode);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setI_opcode(EObject newI_opcode)
  {
    if (newI_opcode != i_opcode)
    {
      NotificationChain msgs = null;
      if (i_opcode != null)
        msgs = ((InternalEObject)i_opcode).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - LC2200Package.IINSTRUCTION__IOPCODE, null, msgs);
      if (newI_opcode != null)
        msgs = ((InternalEObject)newI_opcode).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - LC2200Package.IINSTRUCTION__IOPCODE, null, msgs);
      msgs = basicSetI_opcode(newI_opcode, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LC2200Package.IINSTRUCTION__IOPCODE, newI_opcode, newI_opcode));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RegTrans getReg1()
  {
    return reg1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetReg1(RegTrans newReg1, NotificationChain msgs)
  {
    RegTrans oldReg1 = reg1;
    reg1 = newReg1;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, LC2200Package.IINSTRUCTION__REG1, oldReg1, newReg1);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setReg1(RegTrans newReg1)
  {
    if (newReg1 != reg1)
    {
      NotificationChain msgs = null;
      if (reg1 != null)
        msgs = ((InternalEObject)reg1).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - LC2200Package.IINSTRUCTION__REG1, null, msgs);
      if (newReg1 != null)
        msgs = ((InternalEObject)newReg1).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - LC2200Package.IINSTRUCTION__REG1, null, msgs);
      msgs = basicSetReg1(newReg1, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LC2200Package.IINSTRUCTION__REG1, newReg1, newReg1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public RegTrans getReg2()
  {
    return reg2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetReg2(RegTrans newReg2, NotificationChain msgs)
  {
    RegTrans oldReg2 = reg2;
    reg2 = newReg2;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, LC2200Package.IINSTRUCTION__REG2, oldReg2, newReg2);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setReg2(RegTrans newReg2)
  {
    if (newReg2 != reg2)
    {
      NotificationChain msgs = null;
      if (reg2 != null)
        msgs = ((InternalEObject)reg2).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - LC2200Package.IINSTRUCTION__REG2, null, msgs);
      if (newReg2 != null)
        msgs = ((InternalEObject)newReg2).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - LC2200Package.IINSTRUCTION__REG2, null, msgs);
      msgs = basicSetReg2(newReg2, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LC2200Package.IINSTRUCTION__REG2, newReg2, newReg2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getImm()
  {
    return imm;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setImm(String newImm)
  {
    String oldImm = imm;
    imm = newImm;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LC2200Package.IINSTRUCTION__IMM, oldImm, imm));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LabelEnd getLabel()
  {
    return label;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLabel(LabelEnd newLabel, NotificationChain msgs)
  {
    LabelEnd oldLabel = label;
    label = newLabel;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, LC2200Package.IINSTRUCTION__LABEL, oldLabel, newLabel);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLabel(LabelEnd newLabel)
  {
    if (newLabel != label)
    {
      NotificationChain msgs = null;
      if (label != null)
        msgs = ((InternalEObject)label).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - LC2200Package.IINSTRUCTION__LABEL, null, msgs);
      if (newLabel != null)
        msgs = ((InternalEObject)newLabel).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - LC2200Package.IINSTRUCTION__LABEL, null, msgs);
      msgs = basicSetLabel(newLabel, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LC2200Package.IINSTRUCTION__LABEL, newLabel, newLabel));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case LC2200Package.IINSTRUCTION__IOPCODE:
        return basicSetI_opcode(null, msgs);
      case LC2200Package.IINSTRUCTION__REG1:
        return basicSetReg1(null, msgs);
      case LC2200Package.IINSTRUCTION__REG2:
        return basicSetReg2(null, msgs);
      case LC2200Package.IINSTRUCTION__LABEL:
        return basicSetLabel(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case LC2200Package.IINSTRUCTION__IOPCODE:
        return getI_opcode();
      case LC2200Package.IINSTRUCTION__REG1:
        return getReg1();
      case LC2200Package.IINSTRUCTION__REG2:
        return getReg2();
      case LC2200Package.IINSTRUCTION__IMM:
        return getImm();
      case LC2200Package.IINSTRUCTION__LABEL:
        return getLabel();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case LC2200Package.IINSTRUCTION__IOPCODE:
        setI_opcode((EObject)newValue);
        return;
      case LC2200Package.IINSTRUCTION__REG1:
        setReg1((RegTrans)newValue);
        return;
      case LC2200Package.IINSTRUCTION__REG2:
        setReg2((RegTrans)newValue);
        return;
      case LC2200Package.IINSTRUCTION__IMM:
        setImm((String)newValue);
        return;
      case LC2200Package.IINSTRUCTION__LABEL:
        setLabel((LabelEnd)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case LC2200Package.IINSTRUCTION__IOPCODE:
        setI_opcode((EObject)null);
        return;
      case LC2200Package.IINSTRUCTION__REG1:
        setReg1((RegTrans)null);
        return;
      case LC2200Package.IINSTRUCTION__REG2:
        setReg2((RegTrans)null);
        return;
      case LC2200Package.IINSTRUCTION__IMM:
        setImm(IMM_EDEFAULT);
        return;
      case LC2200Package.IINSTRUCTION__LABEL:
        setLabel((LabelEnd)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case LC2200Package.IINSTRUCTION__IOPCODE:
        return i_opcode != null;
      case LC2200Package.IINSTRUCTION__REG1:
        return reg1 != null;
      case LC2200Package.IINSTRUCTION__REG2:
        return reg2 != null;
      case LC2200Package.IINSTRUCTION__IMM:
        return IMM_EDEFAULT == null ? imm != null : !IMM_EDEFAULT.equals(imm);
      case LC2200Package.IINSTRUCTION__LABEL:
        return label != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (imm: ");
    result.append(imm);
    result.append(')');
    return result.toString();
  }

} //IInstructionImpl
