/**
 * generated by Xtext 2.9.2
 */
package org.team38.assembly.lC2200.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.team38.assembly.lC2200.LC2200Package;
import org.team38.assembly.lC2200.NOOPDirective;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>NOOP Directive</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.team38.assembly.lC2200.impl.NOOPDirectiveImpl#getN_dir <em>Ndir</em>}</li>
 * </ul>
 *
 * @generated
 */
public class NOOPDirectiveImpl extends MinimalEObjectImpl.Container implements NOOPDirective
{
  /**
   * The default value of the '{@link #getN_dir() <em>Ndir</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getN_dir()
   * @generated
   * @ordered
   */
  protected static final String NDIR_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getN_dir() <em>Ndir</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getN_dir()
   * @generated
   * @ordered
   */
  protected String n_dir = NDIR_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected NOOPDirectiveImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return LC2200Package.Literals.NOOP_DIRECTIVE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getN_dir()
  {
    return n_dir;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setN_dir(String newN_dir)
  {
    String oldN_dir = n_dir;
    n_dir = newN_dir;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LC2200Package.NOOP_DIRECTIVE__NDIR, oldN_dir, n_dir));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case LC2200Package.NOOP_DIRECTIVE__NDIR:
        return getN_dir();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case LC2200Package.NOOP_DIRECTIVE__NDIR:
        setN_dir((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case LC2200Package.NOOP_DIRECTIVE__NDIR:
        setN_dir(NDIR_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case LC2200Package.NOOP_DIRECTIVE__NDIR:
        return NDIR_EDEFAULT == null ? n_dir != null : !NDIR_EDEFAULT.equals(n_dir);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (n_dir: ");
    result.append(n_dir);
    result.append(')');
    return result.toString();
  }

} //NOOPDirectiveImpl
