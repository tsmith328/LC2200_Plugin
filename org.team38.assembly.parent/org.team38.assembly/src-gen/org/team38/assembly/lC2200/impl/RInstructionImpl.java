/**
 * generated by Xtext 2.9.1
 */
package org.team38.assembly.lC2200.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.team38.assembly.lC2200.LC2200Package;
import org.team38.assembly.lC2200.RInstruction;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>RInstruction</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.team38.assembly.lC2200.impl.RInstructionImpl#getR_opcode <em>Ropcode</em>}</li>
 *   <li>{@link org.team38.assembly.lC2200.impl.RInstructionImpl#getReg1 <em>Reg1</em>}</li>
 *   <li>{@link org.team38.assembly.lC2200.impl.RInstructionImpl#getReg2 <em>Reg2</em>}</li>
 *   <li>{@link org.team38.assembly.lC2200.impl.RInstructionImpl#getReg3 <em>Reg3</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RInstructionImpl extends MinimalEObjectImpl.Container implements RInstruction
{
  /**
   * The default value of the '{@link #getR_opcode() <em>Ropcode</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getR_opcode()
   * @generated
   * @ordered
   */
  protected static final String ROPCODE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getR_opcode() <em>Ropcode</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getR_opcode()
   * @generated
   * @ordered
   */
  protected String r_opcode = ROPCODE_EDEFAULT;

  /**
   * The default value of the '{@link #getReg1() <em>Reg1</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReg1()
   * @generated
   * @ordered
   */
  protected static final String REG1_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getReg1() <em>Reg1</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReg1()
   * @generated
   * @ordered
   */
  protected String reg1 = REG1_EDEFAULT;

  /**
   * The default value of the '{@link #getReg2() <em>Reg2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReg2()
   * @generated
   * @ordered
   */
  protected static final String REG2_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getReg2() <em>Reg2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReg2()
   * @generated
   * @ordered
   */
  protected String reg2 = REG2_EDEFAULT;

  /**
   * The default value of the '{@link #getReg3() <em>Reg3</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReg3()
   * @generated
   * @ordered
   */
  protected static final String REG3_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getReg3() <em>Reg3</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReg3()
   * @generated
   * @ordered
   */
  protected String reg3 = REG3_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RInstructionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return LC2200Package.Literals.RINSTRUCTION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getR_opcode()
  {
    return r_opcode;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setR_opcode(String newR_opcode)
  {
    String oldR_opcode = r_opcode;
    r_opcode = newR_opcode;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LC2200Package.RINSTRUCTION__ROPCODE, oldR_opcode, r_opcode));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getReg1()
  {
    return reg1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setReg1(String newReg1)
  {
    String oldReg1 = reg1;
    reg1 = newReg1;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LC2200Package.RINSTRUCTION__REG1, oldReg1, reg1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getReg2()
  {
    return reg2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setReg2(String newReg2)
  {
    String oldReg2 = reg2;
    reg2 = newReg2;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LC2200Package.RINSTRUCTION__REG2, oldReg2, reg2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getReg3()
  {
    return reg3;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setReg3(String newReg3)
  {
    String oldReg3 = reg3;
    reg3 = newReg3;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LC2200Package.RINSTRUCTION__REG3, oldReg3, reg3));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case LC2200Package.RINSTRUCTION__ROPCODE:
        return getR_opcode();
      case LC2200Package.RINSTRUCTION__REG1:
        return getReg1();
      case LC2200Package.RINSTRUCTION__REG2:
        return getReg2();
      case LC2200Package.RINSTRUCTION__REG3:
        return getReg3();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case LC2200Package.RINSTRUCTION__ROPCODE:
        setR_opcode((String)newValue);
        return;
      case LC2200Package.RINSTRUCTION__REG1:
        setReg1((String)newValue);
        return;
      case LC2200Package.RINSTRUCTION__REG2:
        setReg2((String)newValue);
        return;
      case LC2200Package.RINSTRUCTION__REG3:
        setReg3((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case LC2200Package.RINSTRUCTION__ROPCODE:
        setR_opcode(ROPCODE_EDEFAULT);
        return;
      case LC2200Package.RINSTRUCTION__REG1:
        setReg1(REG1_EDEFAULT);
        return;
      case LC2200Package.RINSTRUCTION__REG2:
        setReg2(REG2_EDEFAULT);
        return;
      case LC2200Package.RINSTRUCTION__REG3:
        setReg3(REG3_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case LC2200Package.RINSTRUCTION__ROPCODE:
        return ROPCODE_EDEFAULT == null ? r_opcode != null : !ROPCODE_EDEFAULT.equals(r_opcode);
      case LC2200Package.RINSTRUCTION__REG1:
        return REG1_EDEFAULT == null ? reg1 != null : !REG1_EDEFAULT.equals(reg1);
      case LC2200Package.RINSTRUCTION__REG2:
        return REG2_EDEFAULT == null ? reg2 != null : !REG2_EDEFAULT.equals(reg2);
      case LC2200Package.RINSTRUCTION__REG3:
        return REG3_EDEFAULT == null ? reg3 != null : !REG3_EDEFAULT.equals(reg3);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (r_opcode: ");
    result.append(r_opcode);
    result.append(", reg1: ");
    result.append(reg1);
    result.append(", reg2: ");
    result.append(reg2);
    result.append(", reg3: ");
    result.append(reg3);
    result.append(')');
    return result.toString();
  }

} //RInstructionImpl
