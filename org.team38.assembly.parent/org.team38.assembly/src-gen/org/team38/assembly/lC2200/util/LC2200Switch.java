/**
 * generated by Xtext 2.9.2
 */
package org.team38.assembly.lC2200.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import org.team38.assembly.lC2200.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see org.team38.assembly.lC2200.LC2200Package
 * @generated
 */
public class LC2200Switch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static LC2200Package modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public LC2200Switch()
  {
    if (modelPackage == null)
    {
      modelPackage = LC2200Package.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case LC2200Package.PROGRAM:
      {
        Program program = (Program)theEObject;
        T result = caseProgram(program);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LC2200Package.INSTRUCTION:
      {
        Instruction instruction = (Instruction)theEObject;
        T result = caseInstruction(instruction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LC2200Package.DIRECTIVE:
      {
        Directive directive = (Directive)theEObject;
        T result = caseDirective(directive);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LC2200Package.RINSTRUCTION:
      {
        RInstruction rInstruction = (RInstruction)theEObject;
        T result = caseRInstruction(rInstruction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LC2200Package.IINSTRUCTION:
      {
        IInstruction iInstruction = (IInstruction)theEObject;
        T result = caseIInstruction(iInstruction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LC2200Package.JINSTRUCTION:
      {
        JInstruction jInstruction = (JInstruction)theEObject;
        T result = caseJInstruction(jInstruction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LC2200Package.OINSTRUCTION:
      {
        OInstruction oInstruction = (OInstruction)theEObject;
        T result = caseOInstruction(oInstruction);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LC2200Package.NOOP_DIRECTIVE:
      {
        NOOPDirective noopDirective = (NOOPDirective)theEObject;
        T result = caseNOOPDirective(noopDirective);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LC2200Package.WORD_DIRECTIVE:
      {
        WordDirective wordDirective = (WordDirective)theEObject;
        T result = caseWordDirective(wordDirective);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LC2200Package.LA_DIRECTIVE:
      {
        LADirective laDirective = (LADirective)theEObject;
        T result = caseLADirective(laDirective);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LC2200Package.RINSTRUCTION_TRANS:
      {
        RInstructionTrans rInstructionTrans = (RInstructionTrans)theEObject;
        T result = caseRInstructionTrans(rInstructionTrans);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LC2200Package.IINSTRUCTION_IMM_TRANS:
      {
        IInstructionImmTrans iInstructionImmTrans = (IInstructionImmTrans)theEObject;
        T result = caseIInstructionImmTrans(iInstructionImmTrans);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LC2200Package.IINSTRUCTION_OFFSET_TRANS:
      {
        IInstructionOffsetTrans iInstructionOffsetTrans = (IInstructionOffsetTrans)theEObject;
        T result = caseIInstructionOffsetTrans(iInstructionOffsetTrans);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LC2200Package.IINSTRUCTION_LABEL_TRANS:
      {
        IInstructionLabelTrans iInstructionLabelTrans = (IInstructionLabelTrans)theEObject;
        T result = caseIInstructionLabelTrans(iInstructionLabelTrans);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LC2200Package.JINSTRUCTION_TRANS:
      {
        JInstructionTrans jInstructionTrans = (JInstructionTrans)theEObject;
        T result = caseJInstructionTrans(jInstructionTrans);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LC2200Package.WORD_TRANS:
      {
        WordTrans wordTrans = (WordTrans)theEObject;
        T result = caseWordTrans(wordTrans);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LC2200Package.LA_TRANS:
      {
        LATrans laTrans = (LATrans)theEObject;
        T result = caseLATrans(laTrans);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LC2200Package.COMMENT_TRANS:
      {
        CommentTrans commentTrans = (CommentTrans)theEObject;
        T result = caseCommentTrans(commentTrans);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LC2200Package.REG_TRANS:
      {
        RegTrans regTrans = (RegTrans)theEObject;
        T result = caseRegTrans(regTrans);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LC2200Package.LABEL_BEG:
      {
        LabelBeg labelBeg = (LabelBeg)theEObject;
        T result = caseLabelBeg(labelBeg);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case LC2200Package.LABEL_END:
      {
        LabelEnd labelEnd = (LabelEnd)theEObject;
        T result = caseLabelEnd(labelEnd);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Program</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Program</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseProgram(Program object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Instruction</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Instruction</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseInstruction(Instruction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Directive</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Directive</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseDirective(Directive object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>RInstruction</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>RInstruction</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRInstruction(RInstruction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>IInstruction</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>IInstruction</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIInstruction(IInstruction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>JInstruction</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>JInstruction</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJInstruction(JInstruction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>OInstruction</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>OInstruction</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseOInstruction(OInstruction object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>NOOP Directive</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>NOOP Directive</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseNOOPDirective(NOOPDirective object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Word Directive</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Word Directive</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseWordDirective(WordDirective object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>LA Directive</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>LA Directive</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLADirective(LADirective object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>RInstruction Trans</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>RInstruction Trans</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRInstructionTrans(RInstructionTrans object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>IInstruction Imm Trans</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>IInstruction Imm Trans</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIInstructionImmTrans(IInstructionImmTrans object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>IInstruction Offset Trans</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>IInstruction Offset Trans</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIInstructionOffsetTrans(IInstructionOffsetTrans object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>IInstruction Label Trans</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>IInstruction Label Trans</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseIInstructionLabelTrans(IInstructionLabelTrans object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>JInstruction Trans</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>JInstruction Trans</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseJInstructionTrans(JInstructionTrans object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Word Trans</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Word Trans</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseWordTrans(WordTrans object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>LA Trans</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>LA Trans</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLATrans(LATrans object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Comment Trans</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Comment Trans</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCommentTrans(CommentTrans object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Reg Trans</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Reg Trans</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseRegTrans(RegTrans object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Label Beg</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Label Beg</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLabelBeg(LabelBeg object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Label End</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Label End</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLabelEnd(LabelEnd object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //LC2200Switch
